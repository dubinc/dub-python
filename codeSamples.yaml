overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/analytics"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: retrieveAnalytics
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.analytics.retrieve(request={
                    "timezone": "America/New_York",
                    "city": "New York",
                    "device": "Desktop",
                    "browser": "Chrome",
                    "os": "Windows",
                    "referer": "google.com",
                    "referer_url": "https://dub.co/blog",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getCustomers
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.customers.list(request={})

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createCustomer
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.customers.create()

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteCustomer
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.customers.delete(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getCustomer
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.customers.get(request={
                    "id": "<id>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateCustomer
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.customers.update(request={
                    "id": "<id>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listDomains
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.domains.list(request={
                    "page": 1,
                    "page_size": 50,
                })

                while res is not None:
                    # Handle items

                    res = res.next()
  - target: $["paths"]["/domains"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createDomain
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.domains.create(request={
                    "slug": "acme.com",
                    "expired_url": "https://acme.com/expired",
                    "not_found_url": "https://acme.com/not-found",
                    "archived": False,
                    "placeholder": "https://dub.co/help/article/what-is-dub",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/{slug}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteDomain
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.domains.delete(slug="acme.com")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/{slug}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateDomain
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.domains.update(slug="acme.com", request_body={
                    "slug": "acme.com",
                    "expired_url": "https://acme.com/expired",
                    "not_found_url": "https://acme.com/not-found",
                    "archived": False,
                    "placeholder": "https://dub.co/help/article/what-is-dub",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/events"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listEvents
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.events.list(request={
                    "timezone": "America/New_York",
                    "city": "New York",
                    "device": "Desktop",
                    "browser": "Chrome",
                    "os": "Windows",
                    "referer": "google.com",
                    "referer_url": "https://dub.co/blog",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinks
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.list(request={
                    "page": 1,
                    "page_size": 50,
                })

                while res is not None:
                    # Handle items

                    res = res.next()
  - target: $["paths"]["/links"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createLink
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.create(request={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkDeleteLinks
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.delete_many(request={
                    "link_ids": [
                        "clux0rgak00011...",
                        "clux0rgak00022...",
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkUpdateLinks
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.update_many(request={
                    "data": {
                        "url": "https://google.com",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkCreateLinks
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.create_many(request=[
                    {
                        "url": "https://google.com",
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                    },
                    {
                        "url": "https://google.com",
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                    },
                ])

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/count"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinksCount
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.count(request={})

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/info"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinkInfo
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.get(request={
                    "link_id": "clux0rgak00011...",
                    "external_id": "123456",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/upsert"]["put"]
    update:
      x-codeSamples:
        - lang: python
          label: upsertLink
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.upsert(request={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/{linkId}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteLink
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.delete(link_id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/{linkId}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateLink
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.links.update(link_id="<id>", request_body={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/metatags"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getMetatags
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.metatags.get(request={
                    "url": "https://dub.co",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/qr"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getQRCode
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.qr_codes.get(request={
                    "url": "https://normal-making.name",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getTags
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.tags.list(request={
                    "page": 1,
                    "page_size": 50,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createTag
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.tags.create()

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteTag
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.tags.delete(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateTag
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.tags.update(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tokens/embed"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createEmbedToken
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.embed_tokens.create()

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/track/lead"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: trackLead
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.track.lead(request={
                    "click_id": "<id>",
                    "event_name": "Sign up",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/track/sale"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: trackSale
          source: |-
            from dub import Dub
            from dub.models import operations

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.track.sale(request={
                    "amount": 996500,
                    "payment_processor": operations.PaymentProcessor.PADDLE,
                    "event_name": "Purchase",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/workspaces/{idOrSlug}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getWorkspace
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.workspaces.get(request={
                    "id_or_slug": "<value>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/workspaces/{idOrSlug}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateWorkspace
          source: |-
            from dub import Dub

            with Dub(
                token="DUB_API_KEY",
            ) as dub:

                res = dub.workspaces.update(id_or_slug="<value>")

                assert res is not None

                # Handle response
                print(res)
