overlay: 1.0.0
info:
  title: CodeSamples overlay for python target
  version: 0.0.0
actions:
  - target: $["paths"]["/analytics"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: retrieveAnalytics
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.analytics.retrieve(request={
                    "timezone": "America/New_York",
                    "city": "New York",
                    "device": "Desktop",
                    "browser": "Chrome",
                    "os": "Windows",
                    "referer": "google.com",
                    "referer_url": "https://dub.co/blog",
                    "query": "metadata['key']:'value'",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/commissions"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listCommissions
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.commissions.list(request={
                    "page_size": 50,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/commissions/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateCommission
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.commissions.update(request={
                    "id": "cm_1JVR7XRCSR0EDBAF39FZ4PMYE",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getCustomers
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.customers.list(request={
                    "page_size": 50,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteCustomer
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.customers.delete(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getCustomer
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.customers.get(request={
                    "id": "<id>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/customers/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateCustomer
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.customers.update(request={
                    "id": "<id>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listDomains
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.list(request={
                    "archived": True,
                })

                while res is not None:
                    # Handle items

                    res = res.next()
  - target: $["paths"]["/domains"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createDomain
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.create(request={
                    "slug": "acme.com",
                    "expired_url": "https://acme.com/expired",
                    "not_found_url": "https://acme.com/not-found",
                    "placeholder": "https://dub.co/help/article/what-is-dub",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/register"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: registerDomain
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.register(request={
                    "domain": "acme.link",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/status"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: checkDomainStatus
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.check_status(request={
                    "domains": "<value>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/{slug}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteDomain
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.delete(slug="acme.com")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/domains/{slug}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateDomain
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.domains.update(slug="acme.com", request_body={
                    "slug": "acme.com",
                    "expired_url": "https://acme.com/expired",
                    "not_found_url": "https://acme.com/not-found",
                    "placeholder": "https://dub.co/help/article/what-is-dub",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/events"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listEvents
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.events.list(request={
                    "timezone": "America/New_York",
                    "city": "New York",
                    "device": "Desktop",
                    "browser": "Chrome",
                    "os": "Windows",
                    "referer": "google.com",
                    "referer_url": "https://dub.co/blog",
                    "query": "metadata['key']:'value'",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/folders"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listFolders
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.folders.list(request={})

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/folders"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createFolder
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.folders.create()

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/folders/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteFolder
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.folders.delete(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/folders/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateFolder
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.folders.update(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinks
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.list(request={
                    "show_archived": False,
                    "with_tags": True,
                    "page_size": 50,
                })

                while res is not None:
                    # Handle items

                    res = res.next()
  - target: $["paths"]["/links"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.create(request={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                    "test_variants": [
                        {
                            "url": "https://example.com/variant-1",
                            "percentage": 50,
                        },
                        {
                            "url": "https://example.com/variant-2",
                            "percentage": 50,
                        },
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkDeleteLinks
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.delete_many(request={
                    "link_ids": [
                        "clux0rgak00011...",
                        "clux0rgak00022...",
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkUpdateLinks
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.update_many(request={
                    "data": {
                        "url": "https://google.com",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                        "test_variants": [
                            {
                                "url": "https://example.com/variant-1",
                                "percentage": 50,
                            },
                            {
                                "url": "https://example.com/variant-2",
                                "percentage": 50,
                            },
                        ],
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/bulk"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: bulkCreateLinks
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.create_many(request=[
                    {
                        "url": "https://google.com",
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                        "test_variants": [
                            {
                                "url": "https://example.com/variant-1",
                                "percentage": 50,
                            },
                            {
                                "url": "https://example.com/variant-2",
                                "percentage": 50,
                            },
                        ],
                    },
                ])

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/count"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinksCount
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.count(request={
                    "show_archived": False,
                    "with_tags": False,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/info"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getLinkInfo
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.get(request={
                    "link_id": "clux0rgak00011...",
                    "external_id": "123456",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/upsert"]["put"]
    update:
      x-codeSamples:
        - lang: python
          label: upsertLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.upsert(request={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                    "test_variants": [
                        {
                            "url": "https://example.com/variant-1",
                            "percentage": 50,
                        },
                        {
                            "url": "https://example.com/variant-2",
                            "percentage": 50,
                        },
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/{linkId}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.delete(link_id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/links/{linkId}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.links.update(link_id="<id>", request_body={
                    "url": "https://google.com",
                    "external_id": "123456",
                    "tag_ids": [
                        "clux0rgak00011...",
                    ],
                    "test_variants": [
                        {
                            "url": "https://example.com/variant-1",
                            "percentage": 50,
                        },
                        {
                            "url": "https://example.com/variant-2",
                            "percentage": 50,
                        },
                    ],
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: listPartners
          source: |-
            from dub import Dub
            from dub.models import operations


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.list(request={
                    "status": operations.ListPartnersQueryParamStatus.APPROVED,
                    "country": "US",
                    "email": "panic@thedis.co",
                    "tenant_id": "1K0NM7HCN944PEMZ3CQPH43H8",
                    "search": "john",
                    "include_expanded_fields": False,
                    "page_size": 50,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createPartner
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.create(request={
                    "email": "Summer50@yahoo.com",
                    "link_props": {
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                        "test_variants": [
                            {
                                "url": "https://example.com/variant-1",
                                "percentage": 50,
                            },
                            {
                                "url": "https://example.com/variant-2",
                                "percentage": 50,
                            },
                        ],
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners/analytics"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: retrievePartnerAnalytics
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.analytics(request={
                    "timezone": "America/New_York",
                    "query": "metadata['key']:'value'",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners/links"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: retrieveLinks
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.retrieve_links(request={})

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners/links"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createPartnerLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.create_link(request={
                    "link_props": {
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                        "test_variants": [
                            {
                                "url": "https://example.com/variant-1",
                                "percentage": 50,
                            },
                            {
                                "url": "https://example.com/variant-2",
                                "percentage": 50,
                            },
                        ],
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/partners/links/upsert"]["put"]
    update:
      x-codeSamples:
        - lang: python
          label: upsertPartnerLink
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.partners.upsert_link(request={
                    "link_props": {
                        "external_id": "123456",
                        "tag_ids": [
                            "clux0rgak00011...",
                        ],
                        "test_variants": [
                            {
                                "url": "https://example.com/variant-1",
                                "percentage": 50,
                            },
                            {
                                "url": "https://example.com/variant-2",
                                "percentage": 50,
                            },
                        ],
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/qr"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getQRCode
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.qr_codes.get(request={
                    "url": "https://needy-newsstand.biz/",
                    "hide_logo": True,
                    "include_margin": False,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getTags
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.tags.list(request={
                    "page_size": 50,
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createTag
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.tags.create()

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: python
          label: deleteTag
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.tags.delete(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tags/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateTag
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.tags.update(id="<id>")

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/tokens/embed/referrals"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: createReferralsEmbedToken
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.embed_tokens.referrals(request={
                    "partner": {
                        "email": "Letha_Wuckert2@yahoo.com",
                        "link_props": {
                            "external_id": "123456",
                            "tag_ids": [
                                "clux0rgak00011...",
                            ],
                            "test_variants": [
                                {
                                    "url": "https://example.com/variant-1",
                                    "percentage": 50,
                                },
                                {
                                    "url": "https://example.com/variant-2",
                                    "percentage": 50,
                                },
                            ],
                        },
                    },
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/track/lead"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: trackLead
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.track.lead(request={
                    "click_id": "<id>",
                    "event_name": "Sign up",
                    "customer_external_id": "<id>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/track/sale"]["post"]
    update:
      x-codeSamples:
        - lang: python
          label: trackSale
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.track.sale(request={
                    "customer_external_id": "<id>",
                    "amount": 594903,
                    "event_name": "Invoice paid",
                    "lead_event_name": "Cloned template 1481267",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/workspaces/{idOrSlug}"]["get"]
    update:
      x-codeSamples:
        - lang: python
          label: getWorkspace
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.workspaces.get(request={
                    "id_or_slug": "<value>",
                })

                assert res is not None

                # Handle response
                print(res)
  - target: $["paths"]["/workspaces/{idOrSlug}"]["patch"]
    update:
      x-codeSamples:
        - lang: python
          label: updateWorkspace
          source: |-
            from dub import Dub


            with Dub(
                token="DUB_API_KEY",
            ) as d_client:

                res = d_client.workspaces.update(id_or_slug="<value>")

                assert res is not None

                # Handle response
                print(res)
