"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dub.types import BaseModel
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class UpdatePartnerSaleRequestBodyTypedDict(TypedDict):
    program_id: str
    invoice_id: str
    amount: float
    r"""The new amount for the sale."""


class UpdatePartnerSaleRequestBody(BaseModel):
    program_id: Annotated[str, pydantic.Field(alias="programId")]

    invoice_id: Annotated[str, pydantic.Field(alias="invoiceId")]

    amount: float
    r"""The new amount for the sale."""


class UpdatePartnerSaleStatus(str, Enum):
    PENDING = "pending"
    PROCESSED = "processed"
    PAID = "paid"
    REFUNDED = "refunded"
    DUPLICATE = "duplicate"
    FRAUD = "fraud"


class UpdatePartnerSaleResponseBodyTypedDict(TypedDict):
    r"""The updated sale."""

    id: str
    amount: float
    earnings: float
    currency: str
    status: UpdatePartnerSaleStatus
    created_at: str
    updated_at: str


class UpdatePartnerSaleResponseBody(BaseModel):
    r"""The updated sale."""

    id: str

    amount: float

    earnings: float

    currency: str

    status: UpdatePartnerSaleStatus

    created_at: Annotated[str, pydantic.Field(alias="createdAt")]

    updated_at: Annotated[str, pydantic.Field(alias="updatedAt")]
